void modificarPersona(struct usuarios *usuario) {
    int opcion;
    char palabra[300];

    do {
        printf("\n--- Modificar Persona (%s %s) ---\n", usuario->nombre, usuario->apellido);
        printf("1. Cambiar nombre\n");
        printf("2. Cambiar apellido\n");
        printf("3. Cambiar ocupación\n");
        printf("4. Cambiar contraseña\n");
        printf("0. Salir\n");
        printf("Seleccione una opción: ");
        scanf("%d", &opcion);

        switch(opcion) {
            case 1:
                printf("Nuevo nombre: ");
                scanf(" %[^\n]", palabra);
                free(usuario->nombre);
                usuario->nombre = strdup(palabra); // strdup > strcpy, ya que reserva automáticamente la memoria necesaria y copia el contenido
                break;
            case 2:
                printf("Nuevo apellido: ");
                scanf(" %[^\n]", palabra);
                free(usuario->apellido);
                usuario->apellido = strdup(palabra);
                break;
            case 3:
                printf("Nueva ocupación: ");
                scanf(" %[^\n]", palabra);
                free(usuario->ocupacion);
                usuario->ocupacion = strdup(palabra);
                break;
            case 4:
                printf("Nueva contraseña: ");
                scanf(" %[^\n]", palabra);
                free(usuario->contrasena);
                usuario->contrasena = strdup(palabra);
                break;
        }

    } while (opcion != 0);
}

void modificarDatosPersona(struct ministerio *ministerio) {
    char rut[100];
    printf("Ingrese RUT de la persona a modificar: ");
    scanf(" %[^\n]", rut);

    struct persona *p = buscarPersona(ministerio->personas, rut);
    if (p != NULL)
        modificarPersona(p);  // Aquí solo modificas ya que ya buscaste
    else
        printf("Persona no encontrada.\n");
}


