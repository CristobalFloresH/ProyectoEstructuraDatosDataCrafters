void modificarDatosDiligencia(struct datosDiligencia *diligencia) {
    if (diligencia == NULL) {
        printf("Datos de diligencia inválidos.\n");
        return;
    }

    int opcion = -1;
    char buffer[300];

    while (opcion != 0) {
        printf("\n--- Modificar Datos de Diligencia ---\n");
        printf("1. Modificar fecha (Actual: %s)\n", diligencia->fecha ? diligencia->fecha : "(no asignada)");
        printf("2. Modificar lugar (Actual: %s)\n", diligencia->lugar ? diligencia->lugar : "(no asignado)");
        printf("3. Modificar observaciones (Actual: %s)\n", diligencia->observaciones ? diligencia->observaciones : "(no asignadas)");
        printf("0. Salir\n");
        printf("Seleccione una opción: ");

        if (scanf("%d", &opcion) != 1) {
            printf("Entrada inválida.\n");
            while (getchar() != '\n'); // limpiar buffer
            opcion = -1;
            continue;
        }

        getchar(); // limpiar salto de línea

        switch (opcion) {
            case 1:
                printf("Ingrese nueva fecha (YYYY-MM-DD): ");
                if (fgets(buffer, sizeof(buffer), stdin)) {
                    buffer[strcspn(buffer, "\n")] = '\0'; // eliminar salto de línea
                    if (diligencia->fecha) free(diligencia->fecha);
                    diligencia->fecha = strdup(buffer);
                    printf("Fecha actualizada.\n");
                }
                break;

            case 2:
                printf("Ingrese nuevo lugar: ");
                if (fgets(buffer, sizeof(buffer), stdin)) {
                    buffer[strcspn(buffer, "\n")] = '\0';
                    if (diligencia->lugar) free(diligencia->lugar);
                    diligencia->lugar = strdup(buffer);
                    printf("Lugar actualizado.\n");
                }
                break;

            case 3:
                printf("Ingrese nuevas observaciones: ");
                if (fgets(buffer, sizeof(buffer), stdin)) {
                    buffer[strcspn(buffer, "\n")] = '\0';
                    if (diligencia->observaciones) free(diligencia->observaciones);
                    diligencia->observaciones = strdup(buffer);
                    printf("Observaciones actualizadas.\n");
                }
                break;

            case 0:
                printf("Saliendo de modificación.\n");
                break;

            default:
                printf("Opción inválida. Intente nuevamente.\n");
                break;
        }
    }
}
