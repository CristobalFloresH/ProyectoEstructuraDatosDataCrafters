void modificarPersona(struct persona *p) { // puntero simple ya que no necesitamos cambiar direccion de memoria, implementamos un free para liberar y usar el mismo campo de memoria, haciendo una copia.
    int opcion;
    char palabra[300];

    do {
        printf("\n--- Modificar Persona (%s %s) ---\n", p->nombre, p->apellido);
        printf("1. Cambiar nombre\n");
        printf("2. Cambiar apellido\n");
        printf("3. Cambiar ocupación\n");
        printf("4. Cambiar contraseña\n");
        printf("0. Salir\n");
        printf("Seleccione una opción: ");
        scanf("%d", &opcion);

        switch(opcion) {
            case 1:
                printf("Nuevo nombre: ");
                scanf(" %[^\n]", palabra);
                free(p->nombre); // Libera la cantidad de memoria para que strdup le de una nueva cantidad de memoria pero se mantiene la misma direccion de memoria 
                p->nombre = strdup(palabra); // strdup > strcpy, ya que reserva automáticamente la memoria necesaria y copia el contenido en esa d
                break;
            case 2:
                printf("Nuevo apellido: ");
                scanf(" %[^\n]", palabra);
                free(p->apellido);
                p->apellido = strdup(palabra);
                break;
            case 3:
                printf("Nueva ocupación: ");
                scanf(" %[^\n]", palabra);
                free(p->ocupacion);
                p->ocupacion = strdup(palabra);
                break;
            case 4:
                printf("Nueva contraseña: ");
                scanf(" %[^\n]", palabra);
                free(p->contrasena);
                p->contrasena = strdup(palabra);
                break;
        }

    } while (opcion != 0);
}

void modificarDatosPersona(struct ministerio *ministerio) { // puntero simple ya que no modificaremos direccion de memoria y solo necesitamos entrar a las personas del ministerio
    char rut[100];
    printf("Ingrese RUT de la persona a modificar: ");
    scanf(" %[^\n]", rut);

    struct persona *p = buscarPersonaPorRut(ministerio->personas, rut);
    if (p != NULL)
        modificarPersona(p);  // Aquí solo modificas ya que ya buscaste
    else
        printf("Persona no encontrada.\n");
}



void modificarCarpeta(struct carpeta *c) {
    int opcion;
    char palabra[300];

    do {
        printf("\n--- Modificar Carpeta RUC: %s ---\n", c->ruc);
        printf("1. Cambiar RUC\n");
        printf("2. Agregar denuncia\n");
        printf("3. Agregar dato investigativo\n");
        printf("0. Salir\n");
        printf("Seleccione una opción: ");
        scanf("%d", &opcion);

        switch(opcion) {
            case 1:
                printf("Nuevo RUC: ");
                scanf(" %[^\n]", palabra);
                free(c->ruc);
                c->ruc = strdup(palabra);
                break;
            
