// Enumemeramos los estados de causa
enum estadoCausa {
    ARCHIVADA = 1,
    EN_PROGRESO = 2,
    CERRADA = 3,
    EN_JUICIO = 4
};

void cambiarEstadoCausa(struct ministerio *ministerio, const char *rucCausa, int nuevoEstado) {
    if (nuevoEstado < 1 || nuevoEstado > 4) { // Verificamos si el estado es v치lido
        printf("Estado inv치lido. Los estados v치lidos son 1 a 4.\n");
        return;
    }

    struct nodoCausas *nodoActual = min->causas; // inicializamos un nodo actual para el recorrido 

    do {
            if (nodoActual->datosCausa != NULL && nodoActual->datosCausa->ruc != NULL && 
            strcmp(nodoActual->datosCausa->ruc, rucCausa) == 0) { // Comparamos el RUC de la causa actual con el proporcionado
            nodoActual->datosCausa->estadoCausa = nuevoEstado; // cambiamos estado 
            printf("Estado de la causa de RUC %s cambiado a %d.\n", rucCausa, nuevoEstado);
            return;
        }
        nodoActual = nodoActual->siguiente; // avanzamos 
    } while (nodoActual != min->causas);  // Condici칩n para volver al inicio en lista circular

    printf("Causa de RUC %s no encontrada.\n", rucCausa);
}

