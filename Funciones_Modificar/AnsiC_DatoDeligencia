void modificarDatosDiligencia(struct datosDiligencias *diligencia) {
    if (diligencia == NULL) {
        printf("Datos de diligencia inválidos.\n");
        return;
    }

    int opcion = -1;
    char buffer[300];
    char *nuevaCadena;

    while (opcion != 0) {
        printf("\n--- Modificar Datos de Diligencia ---\n");
        printf("1. Modificar prioridad (Actual: %d)\n", diligencia->prioridad);
        printf("2. Modificar fecha inicio (Actual: %s)\n", diligencia->fechaInicio);
        printf("3. Modificar fecha fin (Actual: %s)\n", diligencia->fechaFin);
        printf("4. Modificar descripción (Actual: %s)\n", diligencia->descripcion);
        printf("5. Modificar estado (Actual: %s)\n", diligencia->estado);
        printf("6. Modificar tipo de diligencia (Actual: %s)\n", diligencia->tipoDiligencia);
        printf("0. Salir\n");
        printf("Seleccione una opción: ");

        if (scanf("%d", &opcion) != 1) {
            printf("Entrada inválida.\n");
            while (getchar() != '\n');
            opcion = -1;
            continue;
        }

        getchar(); // limpiar salto de línea pendiente

        switch (opcion) {
            case 1:
                printf("Ingrese nueva prioridad (1 = muy baja, ..., 5 = muy alta): ");
                if (scanf("%d", &diligencia->prioridad) != 1 || diligencia->prioridad < 1 || diligencia->prioridad > 5) {
                    printf("Prioridad inválida.\n");
                    diligencia->prioridad = 1;
                    while (getchar() != '\n');
                }
                getchar();
                break;

            case 2:
                printf("Ingrese nueva fecha inicio (YYYY-MM-DD): ");
                if (fgets(buffer, sizeof(buffer), stdin)) {
                    removerSaltoLinea(buffer);
                    nuevaCadena = duplicarCadena(buffer);
                    free(diligencia->fechaInicio);
                    diligencia->fechaInicio = nuevaCadena;
                }
                break;

            case 3:
                printf("Ingrese nueva fecha fin (YYYY-MM-DD): ");
                if (fgets(buffer, sizeof(buffer), stdin)) {
                    removerSaltoLinea(buffer);
                    nuevaCadena = duplicarCadena(buffer);
                    free(diligencia->fechaFin);
                    diligencia->fechaFin = nuevaCadena;
                }
                break;

            case 4:
                printf("Ingrese nueva descripción: ");
                if (fgets(buffer, sizeof(buffer), stdin)) {
                    removerSaltoLinea(buffer);
                    nuevaCadena = duplicarCadena(buffer);
                    free(diligencia->descripcion);
                    diligencia->descripcion = nuevaCadena;
                }
                break;

            case 5:
                printf("Ingrese nuevo estado: ");
                if (fgets(buffer, sizeof(buffer), stdin)) {
                    removerSaltoLinea(buffer);
                    nuevaCadena = duplicarCadena(buffer);
                    free(diligencia->estado);
                    diligencia->estado = nuevaCadena;
                }
                break;

            case 6:
                printf("Ingrese nuevo tipo de diligencia: ");
                if (fgets(buffer, sizeof(buffer), stdin)) {
                    removerSaltoLinea(buffer);
                    nuevaCadena = duplicarCadena(buffer);
                    free(diligencia->tipoDiligencia);
                    diligencia->tipoDiligencia = nuevaCadena;
                }
                break;

            case 0:
                printf("Saliendo...\n");
                break;

            default:
                printf("Opción inválida. Intente nuevamente.\n");
        }
    }
}
